with "../FreeType_Ada/FreeType_Ada.gpr";
limited with "/Ada_Source/OpenGLAda/opengl-glfw.gpr";

project Example_2_1_Project is

   for Source_Dirs use ("src", "../Reference_Implementation/src", "../../../../Ada_Source/OpenGLAda/examples/common");
   type Glfw_Version_Type is
      ("2", "3");
   Glfw_Version : Glfw_Version_Type := external ("GLFW_Version");
   type Library_Kinds is
      ("static", "relocatable");
   Library_Type : Library_Kinds := external ("LIBRARY_TYPE");
   type Toggle_Type is
      ("enabled", "disabled");
   Auto_Exceptions : Toggle_Type := external ("Auto_Exceptions");
   type Mode_Type is
      ("debug", "release");
   Mode : Mode_Type := external ("Mode");

   -- Different operating systems need different linker
   -- flags. Moreover, some features (such as WGL, GLX,
   -- CGL) are only available on one specific platform.
   -- Supported values:
   --  * windows : Microsoft Windows
   --  * x11     : X Window System
   --  * quartz  : Quartz Compositor (OS X)
   type Windowing_System_Type is
      ("windows", "x11", "quartz");
   Windowing_System : Windowing_System_Type := external ("Windowing_System");

   case Glfw_Version is

      when "2" =>

      when "3" =>

         case Library_Type is

            when "static" =>

               case Auto_Exceptions is

                  when "enabled" =>

                     case Mode is

                        when "debug" =>

                           case Windowing_System is

                              when "windows" =>

                              when "x11" =>

                              when "quartz" =>
                                 for Main use ("bivectors.adb");
                                 for Object_Dir use "obj";
                                 for Exec_Dir use ".";
                           end case;

                        when "release" =>

                           case Windowing_System is

                              when "windows" =>

                              when "x11" =>

                              when "quartz" =>
                                 for Source_Files use ("bivectors.adb", "controls.adb", "controls.ads", "e2ga.adb", "e2ga.ads", "e2ga_draw.adb", "e2ga_draw.ads", "e3ga.adb", "e3ga.ads", "e3ga_utilities.adb", "e3ga_utilities.ads", "ga_draw.adb", 
                                    "ga_draw.ads", "ga_maths.adb", "ga_maths.ads", "geosphere.adb", "geosphere.ads", "gl_util.adb", "gl_util.ads", "initialize.adb", "initialize.ads", "load_dds.adb", "load_dds.ads", "main_loop.adb", 
                                    "main_loop.ads", "maths.adb", "maths.ads", "multivector_analysis.adb", "multivector_analysis.ads", "multivector_analysis_e2ga.adb", "multivector_analysis_e2ga.ads", "multivector_type_base.adb", 
                                    "multivector_type_base.ads", "program_loader.adb", "program_loader.ads", "quaternions.adb", "quaternions.ads", "silo.adb", "silo.ads", "utilities.adb", "utilities.ads");
                                 for Object_Dir use "obj";
                                 for Exec_Dir use ".";
                                 for Main use ("bivectors.adb");
                           end case;
                     end case;

                  when "disabled" =>

               end case;

            when "relocatable" =>

         end case;
   end case;

   package Compiler is
      for Default_Switches ("ada") use ("-gnatyclux");
   end Compiler;

end Example_2_1_Project;

